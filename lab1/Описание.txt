Решение лабораторной работы 1.


Лабораторная работа 1 представлена в виде C# проекта (windows forms). Была выполнена доработка для обеспечения универсальности шаблона. То есть, первой строкой пользователь вносит шаблон, далее вносит данные по определенному ранее шаблону.


Структура проекта.
- lab2
	- Form1.cs
	- Program.cs
	- TemplateConstant.cs
	etc.

В файле Form1.cs описана сама форма ввода ФИО: описан класс формы, ее методы, вся бизнес логика.
В файле Program.cs описан класс Program, который отвечает за создание формы.
В файле TemplateConstant вынесены основные константные значения для управляющих символов.


Описание шаблона.
Шаблон обособляется символами [ и ] слева и справа соответственно.
Шаблон состоит из блоков, каждый из которых описывает определенный набор символов и действий, которые должны совершаться после окончания введения данного блока.
Каждый блок состоит из 4 символов в строго определенном порядке.

Первый символ - обозначение буквы. На данный момент доступен только буквенный ввод. Варианты: 
1. "w" - буква.

Второй символ - обозначение функции, которая будет модифицировать введенные буквы. Варианты: 
1. "l" - приведение к нижнему регистру.
2. "u" - приведение к верхнему регистру.
3. "n" -  отсутствие действий.

Третий символ - разрешенное количество букв для данного блока. Варианты:
1. "?" - возможен ввод только 1 буквы, после чего блок автоматически считается вбитым.
2. "+" - возможно произвольное кол-во букв. Для завершения блока требуется нажать соовтетвующий управляющий символ (NEXT_TEMPLATE_PART = пробел).

Четвертый символ - действие после завершения блока. Варианты:
1. "s" - добавить пробел после вбития блока.
2. "d" - добавить тире после вбития блока
3. "p" - добавить точку после вития блока.
4. "n" - ничего не добавлять.


Описание написания данных по шаблону.
Данные пользователя вносятся по шаблону. Для перехода к следующему блоку используется пробел. 
Когда шаблон вбит, требуется нажать пробел, после чего данные выделятся. Далее можно вбивать следующие данные по шаблону.


Архитектурные решения.
Поскольку проект является крайне небольшим, то было принято решение не определять дополнительные сущности. Вместо этого все основные действия были декомпозированы на функции, которая отвечает за свой набор действий.
Так, работа со сторой была разделена на 2 этапа: написание шаблона и написание данных по шаблону.
Для каждого этапа были описаны свои собственные функции обработки нажатия и поднятия клавишь.


Тестирование и отладка.
Для проверки корректности работы программы применялась ручная отладка.
Отладка включала в себя написание всех возможных шаблонов (в том числе и пустого шаблона) с последующим написанием данных пользователей в количестве 3 раза для каждого шаблона.
Результат ручной отладки показал, что программа работает корректно на всех заявленных выше вариантах использования шаблона.


Примеры отладки.
Шаблон: [wu?pwu?pwu?nwl+n]. Значения: А.И.Смирнов, Б.К.Румянцев, М.А.Островский
Шаблон: [wu?pwu?nwl+dwu?nwl+n]. Значения: А.Колмогоров-Смирнов, Б.Кудряшев-Румянцев, М.Алексеев-Островский

